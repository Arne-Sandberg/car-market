{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/item/item.component.css","webpack:///./src/app/item/item.component.html","webpack:///./src/app/item/item.component.ts","webpack:///./src/app/list/list.component.css","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class APIService {\n  api_url = 'http://127.0.0.1:8000/api/v1/';\n\n  constructor(private  httpClient: HttpClient) {\n  }\n\n  getList(list) {\n    return this.httpClient.get(`${this.api_url}${list}/`);\n  }\n\n  getItem(list, item_id) {\n    return this.httpClient.get(`${this.api_url}${list}/${item_id}/`);\n  }\n\n  register(data) {\n    return this.httpClient.post(`${this.api_url}register/`, data);\n  }\n\n  login(data) {\n    return this.httpClient.post(`${this.api_url}login/`, data);\n  }\n\n  logout() {\n    return this.httpClient.post(`${this.api_url}logout/`, null);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from \"./login/login.component\";\nimport {RegisterComponent} from \"./register/register.component\";\nimport {ListComponent} from \"./list/list.component\";\nimport {ItemComponent} from \"./item/item.component\";\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'list', component: ListComponent},\n  {path: 'item', component: ItemComponent},\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forRoot(routes)],\n})\nexport class AppRoutingModule {\n}\n\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\\\">\\n  <a routerLink=\\\"/\\\"><b class=\\\"navbar-brand\\\">Car market</b></a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n          aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/list\\\">List</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/item\\\">Item</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Sign up</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Log In</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\" (click)=\\\"logout()\\\">Log out</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"main p-3\\\">\\n  <div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import {Component} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {APIService} from \"./api.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  url: string = 'http://127.0.0.1:8000/api/v1/logout';\n\n  constructor(private  apiService: APIService) {\n  }\n\n\n  public logout() {\n    this.apiService.logout().subscribe((response) => {\n      console.log(response);\n    });\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule} from \"@angular/forms\";\n\nimport {AppComponent} from './app.component';\nimport {RegisterComponent} from './register/register.component';\nimport {LoginComponent} from './login/login.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {ListComponent} from './list/list.component';\nimport {ItemComponent} from './item/item.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    ListComponent,\n    ItemComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"getItem(list_name.value, item_id.value)\\\">\\n  <label for=\\\"list\\\">Select table:</label>\\n  <select class=\\\"form-control mb-2\\\" id=\\\"list\\\" required #list_name (change)=\\\"getIds($event.target.value)\\\">\\n    <option *ngFor=\\\"let name of list_names\\\" [value]=\\\"name\\\">\\n      {{ name }}\\n    </option>\\n  </select>\\n  <label for=\\\"item_ids\\\">Select item ID:</label>\\n  <select class=\\\"form-control mb-2\\\" id=\\\"item_ids\\\" required #item_id>\\n    <option *ngFor=\\\"let id of ids\\\" [value]=\\\"id\\\">\\n      {{ id }}\\n    </option>\\n  </select>\\n  <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Show</button>\\n</form>\\n<div class=\\\"row my-4\\\">\\n  <div class=\\\"card h-100 w-100\\\" *ngIf=\\\"item\\\">\\n    <div class=\\\"card-body\\\">\\n      <p *ngFor=\\\"let key of item_keys\\\">\\n        <b>{{ key }}</b>: {{ item[key] }}\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {APIService} from '../api.service';\n\n@Component({\n  selector: 'app-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.css']\n})\nexport class ItemComponent implements OnInit {\n  item: object = null;\n  ids: Array<number> = [];\n  item_keys: Array<string> = [];\n  list_names: Array<string> = ['cars', 'users', 'comments'];\n\n  constructor(private  apiService: APIService) {\n  }\n\n  ngOnInit() {\n    this.getIds(this.list_names[0]);\n  }\n\n  public getIds(list) {\n    this.apiService.getList(list).subscribe((data: Array<object>) => {\n      this.ids = [];\n      for (let i of data) {\n        this.ids.push(i['id']);\n      }\n      console.log(data);\n    });\n  }\n\n  public getItem(list_name, item_id) {\n    if (this.ids.length) {\n      this.apiService.getItem(list_name, item_id).subscribe((data: object) => {\n        this.item = data;\n        this.item_keys = Object.keys(this.item);\n        console.log(data);\n      });\n    }\n    else {\n      this.item = null;\n      this.item_keys = [];\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"getList(list_name.value)\\\">\\n  <label for=\\\"list\\\">Select table:</label>\\n  <select class=\\\"form-control mb-2\\\" name=\\\"list\\\" required #list_name>\\n    <option *ngFor=\\\"let name of list_names\\\" [value]=\\\"name\\\">\\n      {{ name }}\\n    </option>\\n  </select>\\n  <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Show</button>\\n</form>\\n<div class=\\\"row my-4\\\">\\n  <div class=\\\"col-lg-4 mb-4\\\" *ngFor=\\\"let item of list\\\">\\n    <div class=\\\"card h-100\\\">\\n      <div class=\\\"card-body\\\">\\n        <p *ngFor=\\\"let key of list_keys\\\">\\n          <b>{{ key }}</b>: {{ item[key] }}\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {APIService} from '../api.service';\n\n@Component({\n  selector: 'app-car-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  list: Array<object> = [];\n  list_keys: Array<string> = [];\n  list_names: Array<string> = ['cars', 'users', 'comments', 'adds'];\n\n  constructor(private  apiService: APIService) {\n  }\n\n  ngOnInit() {\n  }\n\n  public getList(list_name) {\n    this.apiService.getList(list_name).subscribe((data: Array<object>) => {\n      this.list = data;\n      this.list_keys = this.list.length ? Object.keys(this.list[0]) : [];\n      console.log(data);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg\\\">\\n    <form #userlogin=\\\"ngForm\\\" (ngSubmit)=\\\"login(userlogin.value)\\\">\\n      <h2>Login</h2>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input class=\\\"form-control mb-2\\\" name=\\\"username\\\" placeholder=\\\"username\\\" type=\\\"text\\\" ngModel>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input class=\\\"form-control mb-2\\\" name=\\\"password\\\" placeholder=\\\"password\\\" type=\\\"password\\\" ngModel>\\n      </div>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Login</button>\\n    </form>\\n  </div>\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {APIService} from \"../api.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  url: string = 'http://127.0.0.1:8000/api/v1/login/';\n\n  constructor(private apiService: APIService) {\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n\n  }\n  public login(data) {\n    let data_dict = {\n      'username': data.username,\n      'password': data.password,\n    };\n    this.apiService.login(data_dict).subscribe((response) => {\n      console.log(response);\n    });\n  };\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg\\\">\\n    <form #userregister=\\\"ngForm\\\" (ngSubmit)=\\\"register(userregister.value)\\\">\\n      <h2>Register</h2>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input class=\\\"form-control\\\" name=\\\"username\\\" placeholder=\\\"username\\\" type=\\\"text\\\" ngModel>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"email\\\" type=\\\"email\\\" ngModel>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password1\\\">Password</label>\\n        <input class=\\\"form-control\\\" name=\\\"password1\\\" placeholder=\\\"password\\\" type=\\\"password\\\" ngModel>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password2\\\">Confirm password</label>\\n        <input class=\\\"form-control\\\" name=\\\"password2\\\" placeholder=\\\"confirm password\\\" type=\\\"password\\\" ngModel>\\n      </div>\\n      <button class=\\\"btn btn-primary my-2\\\" type=\\\"submit\\\">Register</button>\\n    </form>\\n  </div>\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {APIService} from '../api.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  constructor(private apiService: APIService) {\n  }\n\n  ngOnInit() {\n  }\n\n  public register(data) {\n    let data_dict = {\n      'username': data.username,\n      'email': data.email,\n      'password1': data.password1,\n      'password2': data.password2,\n    };\n    this.apiService.register(data_dict).subscribe((response) => {\n      console.log(response);\n    });\n  };\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}